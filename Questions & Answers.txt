Basic:
1) Retrieve the total number of orders placed.

Ans : select count(order_id) Total_order_places from orders; --21350

Calculate the total revenue generated from pizza sales.
Ans : select round(sum(o.quantity * p.price),2) as total_revenue
from pizzas p join order_details o
on p.pizza_id=o.pizza_id;

2) Identify the highest-priced pizza.

Ans: select p2.pizza_name,p1.price from pizzas p1 join pizza_types p2
on p1.pizza_type_id=p2.pizza_type_id
order by p1.price desc
limit 1;

3) Identify the most common pizza size ordered.

Ans : select p.size,count(o.quantity) Order_Count from pizzas p join order_details o
on p.pizza_id=o.pizza_id
group by p.size
order by count(o.quantity) desc
limit 1;

4) List the top 5 most ordered pizza types along with their quantities.

Ans: 
select p1.pizza_name,sum(o.quantity) Quantity_Pizza
from pizza_types p1 join pizzas p2 
on p1.pizza_type_id=p2.pizza_type_id
join order_details o
on o.pizza_id=p2.pizza_id
group by p1.pizza_name
order by sum(o.quantity) desc
limit 5;

5) Join relevant tables to find the category-wise distribution of pizzas.

select category,count(pizza_name) as name from pizza_types
group by category

Intermediate:
6) Join the necessary tables to find the total quantity of each pizza category ordered.

Ans: select p1.category,sum(o.quantity) Total_Quantity from pizza_types p1 join pizzas p2
on p1.pizza_type_id=p2.pizza_type_id
join order_details o
on p2.pizza_id=o.pizza_id
group by p1.category
order by count(o.quantity) desc;

7) Determine the distribution of orders by hour of the day.

Ans: select extract(hour from order_time :: TIME) Order_Time,count(order_id) Distributaion_Count
from orders 
group by extract(hour from order_time :: TIME); 

8) Group the orders by date and calculate the average number of pizzas ordered per day.

Ans: 
select round(avg(quantity),2) from (
select o.order_date,sum(o1.quantity) quantity
from orders o join order_details o1
on o.order_id = o1.order_id
group by o.order_date) as order_quantity;

8) Determine the top 3 most ordered pizza types based on revenue.

Ans:
with cte1 as (
select p1.pizza_name,sum(o.quantity * p2.price) Revenue
from pizza_types p1 join pizzas p2
on p1.pizza_type_id = p2.pizza_type_id
join order_details o
on o.pizza_id = p2.pizza_id
group by p1.pizza_name),
cte2 as (
select pizza_name,Revenue,dense_rank() over (order by Revenue desc) as Ranking_revenue
from cte1)
select pizza_name,Revenue from cte2 where Ranking_revenue<=3;

Advanced:
9) Calculate the percentage contribution of each pizza type to total revenue.

Ans:
with cte as (
select p1.category,sum(p2.price * o.quantity) revenue,
(select round(sum(p2.price * o.quantity),2) as toatl_sale
from pizzas p2 join order_details o
on o.pizza_id=p2.pizza_id) as Toatl_sale
from
pizza_types p1 join pizzas p2
on p1.pizza_type_id=p2.pizza_type_id
join order_details o
on o.pizza_id=p2.pizza_id
group by p1.category)
select category,((revenue/Toatl_sale)*100) Percentage from cte;


10) Analyze the cumulative revenue generated over time.

Ans:
select order_date,sum(revenue) over (order by order_date) as cummulative_revenuw 
from (
select order_date,round(sum(price*quantity),2) as revenue
from pizzas p1 join order_details o
on o.pizza_id = p1.pizza_id
join orders o1
on o1.order_id = o.order_id
group by order_date
order by order_date) as sales;

11) Determine the top 3 most ordered pizza types based on revenue for each pizza category.

Ans: with cte as (
select p2.category,p2.pizza_name,round(sum(price*quantity),2) as revenue
from pizzas p1 join order_details o
on o.pizza_id = p1.pizza_id
join pizza_types p2
on p1.pizza_type_id = p2.pizza_type_id
group by p2.category,p2.pizza_name),

cte2 as (
select category,pizza_name,revenue,
rank() over (partition by category order by revenue desc) as Ranking
from cte)

select category,pizza_name,revenue from cte2 where Ranking <=3
